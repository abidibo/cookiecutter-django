"""
Django settings for {{ cookiecutter.project_name }} project.

Generated by 'django-admin startproject' using Django 1.8.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
from getenv import env

BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY', '49saa%ruey1&!nveiz*f(cu$)0pje8wz7u++y-0ljd2)9r)j8h')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = []

ADMINS = (
    ('{{ cookiecutter.author }}', '{{ cookiecutter.email }}'),
)

# SITE
SITE_ID = 1

# MAIL
EMAIL_HOST = 'localhost'
EMAIL_PORT = 25

# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': env('DB_NAME', 'db{{ cookiecutter.repo_name }}'),
        'HOST': env('DB_HOST', 'localhost'),
        'USER': env('DB_USER', '{{ cookiecutter.repo_name }}'),
        'PASSWORD': env('DB_PASSWORD', required=True),
        'PORT': '',
        'OPTIONS': {
            'init_command': 'SET storage_engine=InnoDB',
        }
    }
}

# Application definition

INSTALLED_APPS = (
    {% if cookiecutter.admin == 'django-suit' %}'suit',{% elif cookiecutter.admin == 'django-grappelli' %}'grappelli',{% endif %}
    'django.contrib.sites',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.flatpages',
    'ckeditor',
    'ckeditor_uploader',
    'pipeline',
    {% if cookiecutter.use_filer == 'y' %}
    'filer',
    'mptt',
    'easy_thumbnails',
    {% endif %}
    'django_cleanup',
    'captcha',
    'sorl.thumbnail',
    {% if cookiecutter.use_disqus == 'y' %}'disqus',{% endif %}
    'tagging',
    '{{ cookiecutter.repo_name }}',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = '{{ cookiecutter.repo_name }}.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'debug': False,
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = '{{ cookiecutter.repo_name }}.wsgi.application'

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = '{{ cookiecutter.language_code }}'

TIME_ZONE = '{{ cookiecutter.timezone }}'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATICFILES_STORAGE = 'pipeline.storage.PipelineCachedStorage'
STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'pipeline.finders.PipelineFinder',
)
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# Uploaded files
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# ADMIN
{% if cookiecutter.admin == 'django-grappelli' %}
GRAPPELLI_ADMIN_TITLE = '{{ cookiecutter.project_name }} - Amministrazione'
{% elif cookiecutter.admin == 'django-suit' %}
SUIT_CONFIG = {
    'ADMIN_NAME': '{{ cookiecutter.project_name }}',
    'MENU': (

        '-',

        {'app': 'auth', 'label': 'Authentication', 'icon':'icon-lock'},
        {'app': 'sites', 'label': 'Sites', 'icon':'icon-leaf'},

        {% if cookiecutter.use_filer == 'y' %}
        '-',

        {'app': 'filer', 'label': 'Files', 'icon':'icon-file'},

        {% endif %}
        '-',

        {'app': 'flatpages', 'label': 'Flatpages', 'icon':'icon-book'},

    )
}
{% endif %}

# CKEDITOR
CKEDITOR_UPLOAD_PATH = 'ckeditor/'
CKEDITOR_JQUERY_URL = ''
CKEDITOR_IMAGE_BACKEND = 'pillow'
CKEDITOR_CONFIGS = {
    'default': {
        'skin': 'moono',
        'toolbar_Basic': [
                ['Source', '-', 'Bold', 'Italic']
        ],
        'toolbar_Full': [
                ['Styles', 'Format', 'Bold', 'Italic', 'Underline', 'Strike', 'SpellChecker', 'Undo', 'Redo'],
                ['NumberedList','BulletedList'],
                ['Link','Unlink','Anchor'],
                ['Image', 'Flash', 'Table', 'HorizontalRule'],
                ['TextColor', 'BGColor'],
                ['SpecialChar'], ['PasteFromWord'], ['Source']
        ],
        'toolbar': 'Full',
        'height': 291,
        'width': 835,
        'filebrowserWindowWidth': 940,
        'filebrowserWindowHeight': 725,
        'removePlugins': 'stylesheetparser',
        'allowedContent': True,
        'extraAllowedContent': 'iframe[*]',
    }
}

# pipeline
PIPELINE_CSS = {
    'vendor': {
        'source_filenames': (
            '{{ cookiecutter.repo_name }}/src/vendor/Font-Awesome/scss/font-awesome.scss',
        ),
        'output_filename': '{{ cookiecutter.repo_name }}/css/vendor.min.css',
    },
    '{{ cookiecutter.repo_name }}': { # bootstrap + custom
        'source_filenames': (
            '{{ cookiecutter.repo_name }}/src/scss/styles.scss',
        ),
        'output_filename': '{{ cookiecutter.repo_name }}/css/{{ cookiecutter.repo_name }}.min.css',
    },
}
PIPELINE_JS = {
    'vendor': {
        'source_filenames': (
            '{{ cookiecutter.repo_name }}/src/vendor/bootstrap/js/bootstrap.min.js',
            '{{ cookiecutter.repo_name }}/src/vendor/moment/moment-with-locales.min.js',
        ),
        'output_filename': '{{ cookiecutter.repo_name }}/js/vendor.min.js'
    },
    '{{ cookiecutter.repo_name }}': {
        'source_filenames': (
            '{{ cookiecutter.repo_name }}/src/js/{{ cookiecutter.repo_name }}.js',
        ),
        'output_filename': ' {{ cookiecutter.repo_name }}/js/{{ cookiecutter.repo_name }}.min.js'
    },
}

PIPELINE_COMPILERS = (
    'pipeline.compilers.sass.SASSCompiler',
)
PIPELINE_CSS_COMPRESSOR = None

{% if cookiecutter.use_disqus == 'y' %}
DISQUS_API_KEY = ''
DISQUS_WEBSITE_SHORTNAME = ''
{% endif %}

{% if cookiecutter.use_filer == 'y' %}
THUMBNAIL_HIGH_RESOLUTION = True
THUMBNAIL_PROCESSORS = (
    'easy_thumbnails.processors.colorspace',
    'easy_thumbnails.processors.autocrop',
    #'easy_thumbnails.processors.scale_and_crop',
    'filer.thumbnail_processors.scale_and_crop_with_subject_location',
    'easy_thumbnails.processors.filters',
)
{% endif %}
